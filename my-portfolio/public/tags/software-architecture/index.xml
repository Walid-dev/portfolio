<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software Architecture on Walid&#39;s Portfolio</title>
    <link>http://localhost:1313/tags/software-architecture/</link>
    <description>Recent content in Software Architecture on Walid&#39;s Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 Feb 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/software-architecture/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RESTful APIs: Principles, Practices, and Examples</title>
      <link>http://localhost:1313/blogs/restful-api/</link>
      <pubDate>Thu, 24 Feb 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/restful-api/</guid>
      <description>Introduction RESTful APIs are pivotal in web and software development, facilitating communication between different software systems over the internet. We will explores REST (Representational State Transfer), emphasizing its principles, advantages, and providing real-world examples.&#xA;Core Principles of RESTful APIs REST is an architectural style that outlines guidelines for networked applications, primarily:&#xA;Statelessness: Each request from a client contains all the information the server needs to fulfill that request. Uniform Interface: A consistent interface between components so that information is transferred in a standardized form.</description>
    </item>
  </channel>
</rss>
