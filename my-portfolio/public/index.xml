<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Walid&#39;s Portfolio</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Walid&#39;s Portfolio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 22 Feb 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>React JS</title>
      <link>http://localhost:1313/blogs/introduction_to_react/</link>
      <pubDate>Thu, 22 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/introduction_to_react/</guid>
      <description>React&amp;rsquo;s Origin Story React wasn&amp;rsquo;t born in a vacuum. It was Facebook&amp;rsquo;s answer to specific challenges: managing vast, dynamic user interfaces with data changing all the time. Before React, updating user interfaces efficiently was a major headache for developers. React&amp;rsquo;s solution? The virtual DOM, a game-changer that allowed for minimal actual DOM manipulation, leading to significant performance improvements.&#xA;The Virtual DOM Explained The virtual DOM is a lightweight copy of the real DOM.</description>
    </item>
    <item>
      <title>PHP</title>
      <link>http://localhost:1313/blogs/introduction_to_php/</link>
      <pubDate>Tue, 20 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/introduction_to_php/</guid>
      <description>PHP: The Server-Side Scripting Language PHP, or Hypertext Preprocessor, began as a small open-source project in 1995. It&amp;rsquo;s now one of the most widely used server-side scripting languages, especially for web development. It powers everything from blogs and forums to e-commerce and social networks.&#xA;PHP by the Numbers Usage: Powers over 78% of all websites with a known server-side programming language, including major platforms like WordPress. Community: Large and active, contributing to a vast ecosystem of frameworks, libraries, and tools.</description>
    </item>
    <item>
      <title>Design Patterns</title>
      <link>http://localhost:1313/blogs/design_patterns/</link>
      <pubDate>Fri, 16 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/design_patterns/</guid>
      <description>Introduction Software design patterns are typical solutions to common problems in software design. They serve as templates for solving recurring design issues, promoting more efficient and effective development practices. This guide focuses on JavaScript and PHP examples to explore significant design patterns.&#xA;Creational Patterns Creational patterns provide mechanisms for object creation, increasing flexibility and reuse of existing code.&#xA;Factory Method in JavaScript The Factory Method pattern defines an interface for creating an object, letting subclasses alter the type of objects that will be created.</description>
    </item>
    <item>
      <title>Redux: Managing State in JavaScript Apps</title>
      <link>http://localhost:1313/blogs/introduction_to_redux/</link>
      <pubDate>Fri, 16 Feb 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/introduction_to_redux/</guid>
      <description>Redux: Simplifying State Management Redux is a predictable state container for JavaScript apps, often used with libraries like React, Angular, and Vue. It helps manage the state of an application in a single global object, making state mutations predictable through a strict contract of actions and reducers.&#xA;Why Redux? Redux provides a clear structure for managing state, making it easier to debug and test applications. It&amp;rsquo;s particularly useful in complex applications where multiple components need access to the same state.</description>
    </item>
    <item>
      <title>Tailwind CSS: Revolutionizing Styling for the Web</title>
      <link>http://localhost:1313/blogs/introduction_to_tailwind_css/</link>
      <pubDate>Mon, 29 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/introduction_to_tailwind_css/</guid>
      <description>Tailwind CSS: A New Approach to Styling Tailwind CSS emerged as a utility-first CSS framework, aiming to solve common frustrations with traditional CSS approaches. Developed by Adam Wathan, Jonathan Reinink, David Hemphill, and Steve Schoger, it was officially released in November 2017. Tailwind&amp;rsquo;s philosophy centers on providing low-level utility classes to build custom designs without writing CSS from scratch.&#xA;Why Tailwind? For Developers: Rapid Prototyping: Tailwind speeds up the design process, allowing developers to apply styling directly within HTML.</description>
    </item>
    <item>
      <title>Object-Oriented Programming: Principles and Practices</title>
      <link>http://localhost:1313/blogs/oop/</link>
      <pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/blogs/oop/</guid>
      <description>Introduction Object-Oriented Programming (OOP) is a programming paradigm based on the concept of &amp;ldquo;objects&amp;rdquo;, which can contain data and code: data in the form of fields (often known as attributes or properties), and code, in the form of procedures (often known as methods).&#xA;Core Principles of OOP OOP is built around four main principles: encapsulation, abstraction, inheritance, and polymorphism. These principles help developers create more modular, reusable, and maintainable code.</description>
    </item>
    <item>
      <title>AI Artistry Gallery</title>
      <link>http://localhost:1313/gallery/</link>
      <pubDate>Wed, 25 Oct 2023 19:35:56 +0730</pubDate>
      <guid>http://localhost:1313/gallery/</guid>
      <description></description>
    </item>
    <item>
      <title>Markdown Syntax</title>
      <link>http://localhost:1313/blogs/test/</link>
      <pubDate>Sat, 03 Apr 2021 23:29:21 +0530</pubDate>
      <guid>http://localhost:1313/blogs/test/</guid>
      <description>Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga.</description>
    </item>
  </channel>
</rss>
